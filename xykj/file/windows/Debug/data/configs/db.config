<?xml version="1.0" encoding="utf-8"?>

<configuration >
  <db dbName="xykj_pay" shard="true">
    <!--
    shard:写入过于频繁时分片存储
    server:使用数据库中的其中一个
        type:
            arbitration [主数据库 只能有一个]
            backup : 备份数据库 [建议只有一个] 故障备份,非逻辑备份,用户手动备份的数据库并非存放到这里.
        *** main : 主数据库 [只能有一个 读写最频繁] 主要连接使用此数据库,当此数据库宕机后,在从数据库中,随机挑选一个当做主数据库
            minor : 从数据库 [允许多个] 主库宕机后,推选出一个成为主数据库,主从全部宕机后{1:仲裁 和 备份数据库可用,从二者中选择一个,2:不可用 数据库完全宕机}
      
        ConnectionTimeout : 连接响应时间(秒)
        ConnectionLifetime: 连接响应时间(秒)
        Pooled:true|false 是否使用连接池(推荐使用)
        
        {
          主数据库宕机后,从数据库成为主数据库,
          当主数据回复后,会同步数据,但会程序从数据库备用
        }
    -->
    <ConnectionTimeout value="30"/>
    <ConnectionLifetime value="30"/>
    <Pooled value="true"/>



    <user value="aaa"/>
    <password value="123"/>

    <!-- 仲裁数据库 -->
    <server type="arbitration" address="172.168.1.111" port="11254" />


    <!-- 主数据库  最主要,必须有 也可以只有此一个独立数据库 --><!--
    <server type="main" address="172.168.1.110" port="11255" />



    --><!-- 从库(A) --><!--
    <server type="minor" address="172.168.1.110" port="11001" />
    --><!-- 从库(B) --><!--
    <server type="minor" address="172.168.1.110" port="11002"/>
    --><!-- 从库(N+++ [可有多个]) --><!--





    --><!-- 备份数据库 --><!--
    <server type="backup" address="172.168.1.110" port="11400" />-->

  </db>
</configuration>